tosca_definitions_version: cloudify_dsl_1_2

description: >
  Add later

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - /home/david/cloudify-vagrant-plugin/plugin.yaml

inputs:

  vbox:
    description: VBox box URL or shortened name

  vm_name_prefix:
    description: Virtual machine's display name

  vm_cpus:
    description: Amount of CPUs to be used by the virtual machine

  vm_memory:
    description: Amount of memory to be used by the virtual machine

  ip:
    description: >
      The IPv4 address which the virtual machine will be configured with.
      Provide a CIDR to automatically generate an IP by the CIDR.

  additional_vagrant_settings:
    description: >
      Accepts a dictionary with vagrant config parameters. The key and
      values will be printed into the Vagrant file as "key= value", at the
      vagrant machine configuration part.
      Note: Make sure you use 'config.' as the prefix of the configuration key.
  additional_virtualbox_settings:
    description: >
          Accepts a dictionary with vagrant config parameters. The key and
          values will be printed into the Vagrant file as "key= value", at
          the virtualbox machine configuration part.
          Note: Make sure you use 'vbox.' as the prefix of the configuration
          key.
  provision_sets:
    description:
    # TODO add description

node_templates:
  vm1:
    type: cloudify.nodes.Compute
    properties:
      ip: { get_input: ip }
      install_agent: false
    instances:
      deploy: 2
    interfaces:
        cloudify.interfaces.lifecycle:
            start:
                implementation: vagrant.vagrant_plugin.vbox.tasks.start
                inputs:
                  vbox: { get_input: vbox }
                  vm_name_prefix: { get_input: vm_name_prefix }
                  vm_cpus: { get_input: vm_cpus }
                  vm_memory: { get_input: vm_memory }
                  additional_vagrant_settings: {}
                  additional_virtualbox_settings: {}
                  provision_sets: { get_input: provision_sets }



  vm2:
    type: cloudify.nodes.Compute
    properties:
          ip: {}
          install_agent: false
    interfaces:
        cloudify.interfaces.lifecycle:
            start:
                implementation: vagrant.vagrant_plugin.vbox.tasks.start
                inputs:
                  vbox: { get_input: vbox }
                  vm_name_prefix: { get_input: vm_name_prefix }
                  vm_cpus: { get_input: vm_cpus }
                  vm_memory: { get_input: vm_memory }
                  additional_vagrant_settings: {}
                  additional_virtualbox_settings: {}
                  provision_sets: {}
